{"version":3,"sources":["components/Header/index.js","components/List/index.js","components/Login/index.js","components/Join/index.js","components/Post/index.js","App.js","serviceWorker.js","index.js"],"names":["cx","classNames","bind","styles","Header","react_default","a","createElement","className","react_router_dom","to","List","_useState","useState","_useState2","Object","slicedToArray","lists","setLists","useEffect","id","title","nickname","CreatedAt","tableCnt","length","listTable","map","list","index","TableRow_default","hover","key","TableCell_default","align","Link_default","href","concat","Paper_default","Table_default","TableHead_default","TableBody_default","Login","email","setEmail","_useState3","_useState4","password","setPassword","autoComplete","TextField_default","margin","label","value","onChange","e","target","fullWidth","type","Button_default","color","variant","Join","emailChk","setEmailChk","_useState5","_useState6","password1","setPassword1","_useState7","_useState8","passwordChk1","setPasswordChk1","_useState9","_useState10","password2","setPassword2","_useState11","_useState12","passwordChk2","setPasswordChk2","emailRule","passwordRule","passwordTest","pass","test","helperText","error","withRouter","_ref","history","Typography_default","onClick","goBack","App","components_Header","react_router","path","exact","component","Post","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dce63511.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames/bind';\r\nimport styles from 'styles/common.scss';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className={cx('header')}>\r\n\t\t\t<Link className={cx('logo', 'left')} to=\"/\">\r\n\t\t\t\t로고\r\n\t\t\t</Link>\r\n\t\t\t<div className={cx('right')}>\r\n\t\t\t\t<Link className={cx('login')} to=\"/login\">\r\n\t\t\t\t\t로그인\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link className={cx('join')} to=\"/join\">\r\n\t\t\t\t\t회원가입\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from 'styles/common.scss';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst List = () => {\r\n\tconst [lists, setLists] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLists([\r\n\t\t\t{\r\n\t\t\t\tid: '1',\r\n\t\t\t\ttitle: '제목Test',\r\n\t\t\t\tnickname: '작성자Test',\r\n\t\t\t\tCreatedAt: '2019-05-07',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: '2',\r\n\t\t\t\ttitle: '제목Test22',\r\n\t\t\t\tnickname: '작성자Test22',\r\n\t\t\t\tCreatedAt: '2019-05-08',\r\n\t\t\t},\r\n\t\t]);\r\n\t}, []);\r\n\r\n\tlet tableCnt = lists.length;\r\n\r\n\tconst listTable = lists.map((list, index) => {\r\n\t\treturn (\r\n\t\t\t<TableRow hover key={index}>\r\n\t\t\t\t<TableCell align=\"center\" className={cx('row1')}>\r\n\t\t\t\t\t{tableCnt--}\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"left\" className={cx('row2')}>\r\n\t\t\t\t\t<Link href={`./post/${list.id}`}>{list.title}</Link>\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"center\" className={cx('row3')}>\r\n\t\t\t\t\t{list.nickname}\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"center\" className={cx('row4')}>\r\n\t\t\t\t\t{list.CreatedAt}\r\n\t\t\t\t</TableCell>\r\n\t\t\t</TableRow>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Paper className={cx('lists')}>\r\n\t\t\t<Table className={cx('table')}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell align=\"center\" className={cx('row1')}>\r\n\t\t\t\t\t\t\t번호\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"center\" className={cx('row2')}>\r\n\t\t\t\t\t\t\t제목\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"center\" className={cx('row3')}>\r\n\t\t\t\t\t\t\t작성자\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"center\" className={cx('row4')}>\r\n\t\t\t\t\t\t\t작성시간\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>{listTable}</TableBody>\r\n\t\t\t</Table>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from 'styles/common.scss';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Login = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\treturn (\r\n\t\t<Paper className={cx('loginWrap')}>\r\n\t\t\t<div className={cx('title')}>로그인</div>\r\n\t\t\t<form autoComplete=\"off\" className={cx('loginForm')}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"emailInput\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tlabel=\"이메일\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tsetEmail(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={cx('textField')}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"ipasswordInput\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tlabel=\"비밀번호\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={cx('textField')}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={cx('loginBtn')}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t>\r\n\t\t\t\t\t로그인\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t<div className={cx('joinBtn')}>\r\n\t\t\t\t<Link href={'./join'}>회원가입</Link>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from 'styles/common.scss';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Join = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [emailChk, setEmailChk] = useState(true);\r\n\tconst [password1, setPassword1] = useState('');\r\n\tconst [passwordChk1, setPasswordChk1] = useState(true);\r\n\tconst [password2, setPassword2] = useState('');\r\n\tconst [passwordChk2, setPasswordChk2] = useState(true);\r\n\r\n\t// 이메일 정규식\r\n\tconst emailRule = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\t// 비밀번호 정규식 8~20자 영문,숫자,특수문자\r\n\tconst passwordRule = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/;\r\n\r\n\tconst emailTest = email => {\r\n\t\tif (!email) {\r\n\t\t\tsetEmailChk(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 중복검사 추가해야함\r\n\t\tif (emailRule.test(email)) {\r\n\t\t\tsetEmailChk(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetEmailChk(false);\r\n\t};\r\n\r\n\tconst passwordTest = (pass, type) => {\r\n\t\tif (!pass) {\r\n\t\t\ttype === '1' ? setPasswordChk1(true) : setPasswordChk2(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (passwordRule.test(pass)) {\r\n\t\t\ttype === '1' ? setPasswordChk1(true) : setPasswordChk2(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttype === '1' ? setPasswordChk1(false) : setPasswordChk2(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper className={cx('joinWrap')}>\r\n\t\t\t<div className={cx('title')}>회원가입</div>\r\n\t\t\t<form autoComplete=\"off\" className={cx('joinForm')}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"emailInput\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tlabel=\"이메일\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\temailTest(e.target.value);\r\n\t\t\t\t\t\tsetEmail(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={cx('textField')}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\thelperText={\r\n\t\t\t\t\t\temailChk ? '' : '이메일양식에 맞게 입력해주세요'\r\n\t\t\t\t\t}\r\n\t\t\t\t\terror={emailChk ? false : true}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"passwordInput\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tlabel=\"비밀번호\"\r\n\t\t\t\t\tvalue={password1}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tpasswordTest(e.target.value, '1');\r\n\t\t\t\t\t\tsetPassword1(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={cx('textField')}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t'영문+숫자+특수문자를 혼합하여 8자~20자로 입력해주세요'\r\n\t\t\t\t\t}\r\n\t\t\t\t\terror={passwordChk1 ? false : true}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"rePasswordInput\"\r\n\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\tlabel=\"비밀번호 재입력\"\r\n\t\t\t\t\tvalue={password2}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tpasswordTest(e.target.value, '2');\r\n\t\t\t\t\t\tsetPassword2(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={cx('textField')}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\thelperText={\r\n\t\t\t\t\t\tpasswordChk2 ? '' : '비밀번호를 동일하게 입력해주세요'\r\n\t\t\t\t\t}\r\n\t\t\t\t\terror={passwordChk2 ? false : true}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tclassName={cx('joinBtn')}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t>\r\n\t\t\t\t\t회원가입\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default Join;\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from 'styles/common.scss';\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Post = ({ history }) => {\r\n\tconst title = '제목';\r\n\tconst nickname = '닉네임';\r\n\tconst CreatedAt = '2019-05-07';\r\n\tconst contents =\r\n\t\t'대고, 것은 새가 그들에게 봄날의 용감하고 있음으로써 힘있다. 싹이 구하지 실현에 황금시대다. 가장 구하지 지혜는 못할 것이다.보라, 사랑의 같은 심장의 우리 것이다. 황금시대를 열락의 청춘의 귀는 밥을 청춘은 황금시대의 오아이스도 운다. 끓는 앞이 위하여 발휘하기 속에서 인간의 황금시대다. 내려온 그들의 이상은 그들은 쓸쓸하랴? 오직 할지니, 하는 소리다.이것은 트고, 뿐이다. 청춘의 우리는 풀이 살았으며, 가는 만천하의 청춘의 그러므로 같이 봄바람이다. 이 거선의 이상 석가는 미묘한 더운지라 능히 가진 돋고, 있으랴?';\r\n\r\n\treturn (\r\n\t\t<Paper className={cx('postWrap')}>\r\n\t\t\t<Typography variant=\"h4\" className={'title'}>\r\n\t\t\t\t{title}\r\n\t\t\t</Typography>\r\n\t\t\t<div className={'sub'}>\r\n\t\t\t\t<div className={'nickname'}>{nickname}</div>\r\n\t\t\t\t<div className={'CreatedAt'}>{CreatedAt}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={'contents'}>{contents}</div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.goBack();\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={'listBtn'}\r\n\t\t\t>\r\n\t\t\t\t목록\r\n\t\t\t</Button>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Header from 'components/Header';\r\nimport List from 'components/List';\r\nimport Login from 'components/Login';\r\nimport Join from 'components/Join';\r\nimport Post from 'components/Post';\r\n\r\nimport 'styles/common.scss';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className={'App'}>\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Route path=\"/\" exact component={List} />\r\n\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\r\n\t\t\t\t\t<Route path=\"/join\" exact component={Join} />\r\n\t\t\t\t\t<Route path=\"/post\" component={Post} />\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}